version: '3.8'

services:
  # Message broker
  rabbitmq:
    image: rabbitmq:3.11-management
    ports:
      - "5672:5672"  # AMQP port
      - "15672:15672"  # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    volumes:
      - ./data:/app/data  # Mount the data directory
      - ./output:/app/output  # Mount the output directory
      - ${GOOGLE_APPLICATION_CREDENTIALS}:/app/credentials.json:ro
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/app/credentials.json
      - VERTEX_AI_PROJECT_ID=${VERTEX_AI_PROJECT_ID}
      - VERTEX_AI_LOCATION=${VERTEX_AI_LOCATION}
      - RABBITMQ_HOST=rabbitmq
      - INPUT_DIR=/app/data
      - OUTPUT_DIR=/app/output
      - HCC_CODES_PATH=/app/data/HCC_relevant_codes.csv
    ports:
      - "8000:8000"
    depends_on:
      - rabbitmq

  # Extractor Service
  extractor:
    build:
      context: ./services/extractor
      dockerfile: Dockerfile
    volumes:
      - ./data:/app/data  # Mount the data directory
      - ./output:/app/output  # Mount the output directory
      - ${GOOGLE_APPLICATION_CREDENTIALS}:/app/credentials.json:ro
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/app/credentials.json
      - VERTEX_AI_PROJECT_ID=${VERTEX_AI_PROJECT_ID}
      - VERTEX_AI_LOCATION=${VERTEX_AI_LOCATION}
      - RABBITMQ_HOST=rabbitmq
      - INPUT_DIR=/app/data
      - OUTPUT_DIR=/app/output
      - HCC_CODES_PATH=/app/data/HCC_relevant_codes.csv
    depends_on:
      - rabbitmq

  # Analyzer Service
  analyzer:
    build:
      context: ./services/analyzer
      dockerfile: Dockerfile
    volumes:
      - ./data:/app/data  # Mount the data directory
      - ./output:/app/output  # Mount the output directory
      - ${GOOGLE_APPLICATION_CREDENTIALS}:/app/credentials.json:ro
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/app/credentials.json
      - VERTEX_AI_PROJECT_ID=${VERTEX_AI_PROJECT_ID}
      - VERTEX_AI_LOCATION=${VERTEX_AI_LOCATION}
      - RABBITMQ_HOST=rabbitmq
      - INPUT_DIR=/app/data
      - OUTPUT_DIR=/app/output
      - HCC_CODES_PATH=/app/data/HCC_relevant_codes.csv
    depends_on:
      - rabbitmq
      - extractor

  # Validator Service
  validator:
    build:
      context: ./services/validator
      dockerfile: Dockerfile
    volumes:
      - ./data:/app/data  # Mount the data directory
      - ./output:/app/output  # Mount the output directory
    environment:
      - INPUT_DIR=/app/data
      - OUTPUT_DIR=/app/output
      - HCC_CODES_PATH=/app/data/HCC_relevant_codes.csv
    depends_on:
      - analyzer

  # Storage Watcher Service
  storage-watcher:
    build:
      context: ./services/storage-watcher
      dockerfile: Dockerfile
    volumes:
      - ./data:/app/data  # Mount the data directory
      - ${GOOGLE_APPLICATION_CREDENTIALS}:/app/credentials.json:ro
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/app/credentials.json
      - STORAGE_TYPE=local
      - WATCH_PATH=/app/data
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_QUEUE=document-events
      - WATCH_INTERVAL=10.0
      - FILE_PATTERNS=*.txt,*.pdf
    depends_on:
      - rabbitmq

  # LangGraph development server

volumes:
  rabbitmq_data: